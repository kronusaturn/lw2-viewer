(uiop:define-package #:lw2.schema-types
    (:use #:cl #:lw2.schema-type))

(in-package #:lw2.schema-types)

(define-schema-type :post ()
  ((post-id string :alias :--id)
   (slug string)
   (title string)
   (user-id string)
   (url (or null string))
   (feed-link (or null string) :backend-type backend-feed-crossposts)
   (posted-at string)
   (base-score fixnum)
   (comment-count (or null fixnum))
   (page-url (or null string))
   (word-count (or null fixnum))
   (frontpage-date (or null string))
   (curated-date (or null string))
   (meta boolean)
   (af boolean :backend-type backend-alignment-forum)
   (draft boolean)
   (question boolean :backend-type backend-q-and-a)
   (vote-count (or null fixnum))
   (tags list :graphql-ignore t)
   (html-body (or null string) :qualifier :body)))

(define-schema-type :comment ()
  ((comment-id string :alias :--id)
   (user-id string)
   (posted-at string)
   (highlight-new boolean :graphql-ignore t)
   (post-id string)
   (base-score fixnum)
   (page-url (or null string))
   (parent-comment list :qualifier :index :subfields (:--id :user-id :post-id))
   (parent-comment-id (or null string))
   (child-count (or null fixnum) :graphql-ignore t)
   (children list :graphql-ignore t)
   (af boolean :backend-type backend-alignment-forum)
   (vote-count (or null fixnum))
   (retracted boolean)
   (deleted-public boolean)
   (answer boolean :backend-type backend-q-and-a)
   (parent-answer-id (or null string) :backend-type backend-q-and-a)
   (html-body string)))
